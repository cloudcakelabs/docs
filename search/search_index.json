{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Notes","text":""},{"location":"automation/","title":"Automation","text":""},{"location":"automation/#salt-stack","title":"Salt stack","text":""},{"location":"automation/#minion","title":"Minion","text":"<p>Apply specific state from a minion(doc)</p> <p><code>sal-call</code> or <code>venv-salt-call</code>(SUSE Manager version)</p> <pre><code>venv-salt-call state.apply &lt;sls&gt; --state_output=changes\n</code></pre> <p>Test mode</p> <pre><code>venv-salt-call state.apply &lt;sls&gt; test=true --state_output=changes\n</code></pre>"},{"location":"automation/#master","title":"Master","text":"<p>Delete specified minion key(doc)</p> <p>Warning</p> <p>Delete key, only if needed!</p> <pre><code>salt-key -d &lt;minion_id&gt;\n</code></pre>"},{"location":"docker/","title":"Docker","text":""},{"location":"k8s/","title":"Kubernetes","text":""},{"location":"k8s/#administration","title":"Administration","text":""},{"location":"k8s/#setup-bashrc","title":"Setup <code>~/.bashrc</code>","text":"<p>Download: Kubernetes prompt for bash</p> <pre><code>curl -L https://raw.githubusercontent.com/jonmosco/kube-ps1/refs/heads/master/kube-ps1.sh -o ~/.bash_kube_ps1\n</code></pre> <pre><code>source &lt;(kubectl completion bash)\nalias k=kubectl\ncomplete -o default -F __start_kubectl k\nsource ~/.bash_kube_ps1\nPS1='[\\u@\\h \\W $(kube_ps1)]\\$ '\n</code></pre>"},{"location":"k8s/#cluster-and-context","title":"Cluster and context","text":""},{"location":"k8s/#display-addresses-of-the-control-plane-and-services","title":"Display addresses of the control plane and services","text":"<pre><code>k cluster-info\n</code></pre>"},{"location":"k8s/#print-the-client-and-server-version-information","title":"Print the client and server version information","text":"<pre><code>k version\n</code></pre>"},{"location":"k8s/#get-the-configuration-of-the-cluster","title":"Get the configuration of the cluster","text":"<pre><code>k config view\n</code></pre>"},{"location":"k8s/#display-the-current-context","title":"Display the current context","text":"<pre><code>k config current-context\n</code></pre>"},{"location":"k8s/#display-the-list-of-contexts","title":"Display the list of contexts","text":"<pre><code>k config get-contexts\n</code></pre>"},{"location":"k8s/#set-the-default-context","title":"Set the default context","text":"<pre><code>k config use-context &lt;context name&gt;\n</code></pre>"},{"location":"k8s/#merging-kubeconfig-files","title":"Merging kubeconfig files","text":"<pre><code>KUBECONFIG=file1:file2:file3 k config view --merge --flatten &gt; config.merged\n</code></pre>"},{"location":"k8s/#list-the-api-resources","title":"List the API resources","text":"<pre><code>k api-resources\n</code></pre>"},{"location":"k8s/#list-pods-services-daemonsets-deployments-etcin-all-namespaces","title":"List pods, services, daemonsets, deployments, etc...in all namespaces","text":"<pre><code>k get all -A\n</code></pre>"},{"location":"k8s/#nodes","title":"Nodes","text":"<ul> <li>Listing nodes</li> </ul> <pre><code>k get nodes\n</code></pre> <ul> <li>Display resource usage (cpu/memory) for node</li> </ul> <pre><code>k top node &lt;node name&gt;\n</code></pre> <ul> <li>Pods running on a node</li> </ul> <pre><code>k get pods -o wide | grep &lt;node name&gt;\n</code></pre> <ul> <li>Get custom info about Nodes</li> </ul> <pre><code>k get nodes -o custom-columns=\"NAME:.metadata.name,INTERNAL_IP:.status.addresses[0].address,KERNEL:.status.nodeInfo.kernelVersion,MEMORY_PRESSURE:.status.conditions[0].status,DISK_PRESSURE:.status.conditions[1].status,PID_PRESSURE:.status.conditions[2].status,READY:.status.conditions[3].status\"\n</code></pre>"},{"location":"k8s/#namespaces","title":"Namespaces","text":""},{"location":"k8s/#listing-namespaces","title":"Listing namespaces","text":"<pre><code>k get namespaces\n</code></pre> <pre><code>k get namespace &lt;namespace&gt;\n</code></pre>"},{"location":"k8s/#display-details-about-namespace","title":"Display details about namespace","text":"<pre><code>k describe namespace &lt;namespace&gt;\n</code></pre>"},{"location":"k8s/#deployments","title":"Deployments","text":"<ul> <li>List deployments</li> </ul> <pre><code>k get deployment\n</code></pre> <ul> <li>Get details about a deployment</li> </ul> <pre><code>k describe deployment &lt;deployment_name&gt;\n</code></pre> <ul> <li>Scale up/down a deployment</li> </ul> <pre><code>k scale --replicas=&lt;number&gt; deployment/&lt;deployment_name&gt;\n</code></pre> <ul> <li>Get deployment history</li> </ul> <pre><code>k rollout history deployment &lt;deployment_name&gt;\n</code></pre> <pre><code>k rollout history deployment &lt;deployment_name&gt; --revision=&lt;revision_number&gt;\n</code></pre> <ul> <li>Compare two revisions</li> </ul> <pre><code>diff &lt;(k rollout history deployment &lt;deployment_name&gt; --revision=&lt;revision_number&gt;) &lt;(k rollout history deployment &lt;deployment_name&gt; --revision=&lt;revision_number&gt;)\n</code></pre>"},{"location":"k8s/#daemonsets","title":"Daemonsets","text":"<ul> <li>List daemonsets</li> </ul> <pre><code>k get daemonset\n</code></pre> <ul> <li>Display detailed state of daemonset</li> </ul> <pre><code>k describe ds &lt;daemonset_name&gt;\n</code></pre>"},{"location":"k8s/#statefulset","title":"StatefulSet","text":"<ul> <li>List StatefulSet</li> </ul> <pre><code>k get statefulset\n</code></pre> <ul> <li>Scale Up/Down</li> </ul> <pre><code>k scale --replicas=&lt;number&gt; sts &lt;sts_name&gt;\n</code></pre>"},{"location":"k8s/#pods","title":"Pods","text":""},{"location":"k8s/#list-pods","title":"List pods","text":"<pre><code>k get pods\n</code></pre> <pre><code>k get pods -o wide\n</code></pre> <pre><code>k get pods --show-labels\n</code></pre>"},{"location":"k8s/#get-information-about-a-pod","title":"Get information about a Pod","text":"<pre><code>k get pod &lt;pod_name&gt; -o wide\n</code></pre> <pre><code>k describe pod &lt;pod_name&gt;\n</code></pre> <p>Sort pods list using specified field. The field can be either 'cpu' or 'memory'</p> <pre><code> k top pod --sort-by=memory\n</code></pre> <pre><code> k top pod --sort-by=cpu\n</code></pre>"},{"location":"k8s/#get-ip-addr-from-pod-definition","title":"Get IP addr from Pod definition","text":"<pre><code>k get pod &lt;pod_name&gt; --output=jsonpath='{..podIP}'\n</code></pre> <pre><code>k get pod &lt;pod_name&gt; --output=jsonpath='{..podIPs}'\n</code></pre>"},{"location":"k8s/#logs","title":"Logs","text":"<pre><code>k logs &lt;pod_name&gt;\n</code></pre> <pre><code>k logs --since=1h &lt;pod_name&gt;\n</code></pre> <pre><code>k logs --tail=50 &lt;pod_name&gt;\n</code></pre> <pre><code>k logs -f &lt;pod_name&gt;\n</code></pre> <pre><code>k logs &lt;pod_name&gt; &lt;pod_name&gt;.log\n</code></pre> <pre><code>k logs --previous &lt;pod_name&gt;\n</code></pre> <pre><code>k logs -c &lt;container name&gt; &lt;pod_name&gt;\n</code></pre> <p>Logs with label selector (10 lines if a selector is provided)</p> <pre><code>k logs -l app.kubernetes.io/instance=&lt;my_label&gt; -n &lt;namespace&gt; \n</code></pre>"},{"location":"k8s/#exec-command","title":"Exec command","text":"<pre><code>k exec &lt;pod_name&gt; -- ls /\n</code></pre> <pre><code>k exec &lt;pod_name&gt; -c &lt;container name&gt; -- ls /\n</code></pre> <pre><code>k exec --stdin --tty &lt;pod_name&gt; -- /bin/sh \n</code></pre> <p>Get an interactive shell</p> <pre><code>k exec -it &lt;pod_name&gt; -- sh\n</code></pre>"},{"location":"k8s/#port-forward","title":"Port Forward","text":"<pre><code>k port-forward --address &lt;local_ip_addr&gt; &lt;pod_name or deployment_name&gt; &lt;local_port&gt;:&lt;remote_port&gt;\n</code></pre> <p>Example</p> <pre><code>k port-forward --address 0.0.0.0 pods/mongo-75f59d57f4-4nd6q 28015:27017\n</code></pre>"},{"location":"k8s/#replicaset","title":"ReplicaSet","text":"<pre><code>k get rs\n</code></pre> <ul> <li>Filter: <code>DESIRED</code> != 0</li> </ul> <pre><code>k get rs | awk '{if ($2 != 0) print $0}'\n</code></pre> <pre><code>k describe rs/&lt;rs name&gt;\n</code></pre> <ul> <li>Delete Pod</li> </ul> <pre><code>k delete pod &lt;pod_name&gt;\n</code></pre> <ul> <li>Force Pod deletion</li> </ul> <pre><code>k delete pod --grace-period=0 --force &lt;pod_name&gt;\n</code></pre> <ul> <li>List all Container images</li> </ul> <pre><code>k get pods -o jsonpath=\"{.items[*].spec['initContainers', 'containers'][*].image}\" | tr -s '[[:space:]]' '\\n' | sort | uniq -c\n</code></pre> <pre><code>k get pods -o jsonpath='{range .items[*]}{\"\\n\"}{.metadata.name}{\":\\t\"}{range .spec.containers[*]}{.image}{\", \"}{end}{end}' | sort\n</code></pre> <ul> <li>Get images IDs</li> </ul> <pre><code> k get pods -o jsonpath=\"{.items[*].status.containerStatuses[*].imageID}\" | tr -s '[[:space:]]' '\\n' | sort | uniq -c\n</code></pre>"},{"location":"k8s/#get-restartcount-and-state","title":"Get restartCount and state","text":"<pre><code>k get pods &lt;pod_name&gt; -o jsonpath='{.spec.containers[*].name} {.status.containerStatuses[*].restartCount} {.status.containerStatuses[*].state}'\n</code></pre>"},{"location":"k8s/#get-pods-resources-requestslimits","title":"Get Pods resources requests/limits","text":"<pre><code>k get pods -o custom-columns='NAME:.metadata.name,CPU_REQUEST:spec.containers[].resources.requests.cpu,CPU_LIMIT:spec.containers[].resources.limits.cpu,MEMORY_REQUEST:spec.containers[].resources.requests.memory,MEM_LIMIT:spec.containers[].resources.limits.memory'\n</code></pre>"},{"location":"k8s/#get-pod-states","title":"Get pod states","text":"<ul> <li>Get Pods start time and ready time</li> </ul> <pre><code>k get pods -o custom-columns='NAME:.metadata.name,START_TIME:status.startTime,READY_TIME:.status.conditions[?(@.type==\"Ready\")].lastTransitionTime'\n</code></pre> <pre><code>k get pods -o custom-columns='NAME:.metadata.name,START_TIME:status.startTime,READY:.status.conditions[?(@.type==\"Ready\")].status,READY_TIME:.status.conditions[?(@.type==\"Ready\")].lastTransitionTime' | (sed -u 1q; sort -k 3)\n</code></pre> <ul> <li>Get <code>NAME</code>, <code>STARTED_AT</code> and <code>READY_AT</code> using <code>custom-columns</code></li> </ul> <pre><code>k get pods -o custom-columns='NAME:.metadata.name,STARTED_AT:.status.containerStatuses[].state.running.startedAt,READY_AT:.status.conditions[?(@.type==\"Ready\")].lastTransitionTime'\n</code></pre> <ul> <li>Get <code>Ready</code> time(Headers ignored and sorted by date)</li> </ul> <pre><code>k get pods -o custom-columns='POD_NAME:.metadata.name,READY_AT:.status.conditions[?(@.type==\"Ready\")].lastTransitionTime' | (sed -u 1q; sort -k 2)\n</code></pre> <p>Running state(using <code>jq</code>)</p> <pre><code>k get pod &lt;pod_name&gt; -o json | jq '.status.containerStatuses[].state'\n</code></pre> <p>Ready state(using <code>jq</code>)</p> <pre><code>k get pod &lt;pod_name&gt; -o json | jq '.status.conditions[] | select(.type==\"Ready\")'\n</code></pre>"},{"location":"k8s/#events","title":"Events","text":"<ul> <li>Get events with custom output</li> </ul> <pre><code>k get events --sort-by=.metadata.creationTimestamp -o custom-columns=LAST_SEEN:.lastTimestamp,TYPE:.type,REASON:.reason,OBJECT:.involvedObject.name,COMPONENT:.source.component,COUNT:.count,MESSAGE:.message\n</code></pre> <ul> <li>Get events using <code>--field-selector</code></li> </ul> <pre><code>k get events --field-selector involvedObject.kind=Pod\n</code></pre> <ul> <li>List warnings events</li> </ul> <pre><code>k get events --sort-by=.metadata.creationTimestamp --field-selector type=Warning\n</code></pre> <ul> <li>Sorting: Inverse order</li> </ul> <pre><code>watch -d 'kubectl get events --sort-by=.metadata.creationTimestamp --no-headers -A | tac'\n</code></pre> <ul> <li>Get recently deleted pods</li> </ul> <pre><code>k get events --field-selector reason=Killing --sort-by='.metadata.creationTimestamp'\n</code></pre> <pre><code>k get event -o custom-columns=NAME:.metadata.name | cut -d \".\" -f1\n</code></pre>"},{"location":"k8s/#maintenance","title":"Maintenance","text":""},{"location":"k8s/#cordon-the-nodemarked-as-unschedulable","title":"Cordon the node(marked as unschedulable)","text":"<pre><code>k cordon &lt;node-name&gt;\n</code></pre>"},{"location":"k8s/#drain-the-workloads-for-the-node","title":"Drain the workloads for the node","text":"<pre><code>k drain &lt;node-name&gt; --ignore-daemonsets \n</code></pre>"},{"location":"k8s/#uncordon-the-nodemarked-as-schedulable","title":"Uncordon the node(marked as schedulable)","text":"<pre><code>k uncordon &lt;node-name&gt;\n</code></pre>"},{"location":"k8s/#helm","title":"Helm","text":"<ul> <li>Update repo</li> </ul> <pre><code>helm repo update\n</code></pre> <ul> <li>List all charts</li> </ul> <pre><code>helm search repo\n</code></pre> <pre><code>helm search repo &lt;chart_name&gt;\n</code></pre> <ul> <li>List all versions of all charts</li> </ul> <pre><code>helm search repo -l\n</code></pre> <pre><code>helm search repo -l &lt;chart_name&gt;\n</code></pre>"},{"location":"k8s/#rancher-rke2-and-k3s","title":"Rancher, RKE2 and K3S","text":""},{"location":"k8s/#crictl","title":"crictl","text":"<pre><code>export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml\n</code></pre> <pre><code>/var/lib/rancher/rke2/bin/crictl ps\n</code></pre>"},{"location":"k8s/#kubectl","title":"kubectl","text":"<pre><code>export KUBECONFIG=/etc/rancher/rke2/rke2.yaml\n</code></pre> <pre><code>/var/lib/rancher/rke2/bin/kubectl get nodes\n</code></pre>"},{"location":"k8s/#systemd-services","title":"Systemd services","text":"<p>RKE2 server</p> <pre><code>systemctl status rke2-server\n</code></pre> <p>RKE2 agent</p> <pre><code>systemctl status rke2-agent\n</code></pre>"},{"location":"k8s/#uninstall","title":"Uninstall","text":"<pre><code>/usr/local/bin/rancher-system-agent-uninstall.sh\n</code></pre>"},{"location":"k8s/#containerd","title":"containerd","text":"<p>socket: <code>/run/k3s/containerd/containerd.sock</code></p>"},{"location":"k8s/#install-rancher-using-docker","title":"Install Rancher using Docker","text":"<p>Installing Rancher on a Single Node with default Rancher-generated Self-signed Certificate</p> <pre><code>docker run -d --restart=unless-stopped -p 80:80 -p 443:443 --privileged rancher/rancher:v2.9.2\n</code></pre>"},{"location":"k8s/#k3s-configuration","title":"K3S configuration","text":"<ul> <li>Requirements</li> <li>Known Issues</li> </ul>"},{"location":"k8s/#kind","title":"Kind","text":""},{"location":"k8s/#quick-startdoc","title":"Quick Start(doc)","text":"<ul> <li>Install <code>kubectl</code>(doc)</li> <li>Install <code>go</code>(doc)</li> <li>Install <code>kind</code></li> </ul> <pre><code>go install sigs.k8s.io/kind@v0.25.0 \n</code></pre> <ul> <li>Create a cluster</li> </ul> <pre><code>kind create cluster --config &lt;config_file&gt; --name &lt;cluster_name&gt;\n</code></pre> <ul> <li>Delete a cluster</li> </ul> <pre><code>kind delete cluster --name &lt;cluster_name&gt;\n</code></pre>"},{"location":"k8s/#known-issues","title":"Known Issues","text":"<ul> <li>Pod errors due to \"too many open files\"(doc)</li> </ul>"},{"location":"k8s/#netbox","title":"Netbox","text":""},{"location":"k8s/#installation","title":"Installation","text":"<ul> <li>Install Netbox Helm Chart</li> </ul> <pre><code>helm repo add netbox https://charts.netbox.oss.netboxlabs.com/\n</code></pre> <pre><code>helm install netbox netbox/netbox --version 5.0.9 --namespace netbox --create-namespace\n</code></pre>"},{"location":"k8s/#documentaion","title":"Documentaion","text":"<ul> <li>Cluster Architecture</li> <li>kubectl Quick Reference</li> <li>Kind Quick Start</li> </ul>"},{"location":"system/","title":"System","text":""},{"location":"system/#linux","title":"Linux","text":""},{"location":"system/#files-and-directories","title":"Files and directories","text":""},{"location":"system/#find-large-files","title":"Find large files","text":"<pre><code>find /path/to/dir -type f -exec du -h {} + | sort -hr | head -20\n</code></pre> <pre><code>find /path/to/dir -type f -printf \"%s\\t%p\\n\" | sort -rh | head -20\n</code></pre> <pre><code>find /path/to/dir -type f -exec ls -s {} + | sort -n -r | head -20\n</code></pre> <pre><code># Do not cross filesystems\nfind /path/to/dir -xdev -type f -exec ls -s {} + | sort -n -r | head -20\n</code></pre>"},{"location":"system/#display-files-older-than-60-days","title":"Display files older than 60 days","text":"<pre><code>find /path/to/dir -type f -mtime +60 -exec ls -s {} \\;\n</code></pre>"},{"location":"system/#delete-files-older-than-60-days","title":"Delete files older than 60 days","text":"<pre><code>find /path/to/dir -type f -mtime +60 -exec rm -f {} \\;\n</code></pre>"},{"location":"system/#find-and-exec-a-command","title":"Find and exec a command","text":"<pre><code>find [path] [args] -exec [command] {} \\;\n# example\nfind /path/to/dir -type f -exec cp {} {}.bak \\;\n</code></pre> <p><code>--relative</code> flag creates subdirectories in the target directory</p> <pre><code>find /path/to/dir/ -type f -name &lt;name&gt; -exec rsync -av --relative {} /path/to/dir/ \\;\n</code></pre>"},{"location":"system/#sort-by-size","title":"Sort by size","text":"<pre><code>ls -lha --sort=size\n</code></pre>"},{"location":"system/#get-absolute-path-of-a-file","title":"Get absolute path of a file","text":"<pre><code>realpath &lt;filename&gt;\n</code></pre>"},{"location":"system/#sync-directories","title":"Sync directories","text":"<pre><code>rsync -av --delete --progress /src/ /dst/\n</code></pre>"},{"location":"system/#redirect-stderr-and-stdout","title":"Redirect stderr and stdout","text":"<pre><code># stdout\ncommand 1&gt; /dev/null\n# stderr\ncommand 2&gt; /dev/null\n# stderr to stdout to a file\ncommand &gt; /dev/null 2&gt;&amp;1\n# stderr to stdout to a file\ncommand &amp;&gt; /dev/null\n</code></pre>"},{"location":"system/#get-some-informations-about-a-program","title":"Get some informations about a program","text":"<pre><code>file &lt;program&gt;\n</code></pre>"},{"location":"system/#print-shared-object-dependencies","title":"Print shared object dependencies","text":"<pre><code>ldd &lt;program&gt;\n</code></pre>"},{"location":"system/#display-permissions-and-usergroup-with-tree","title":"Display permissions and user/group with <code>tree</code>","text":"<pre><code>tree -pugfiaD /path/to/dir\n</code></pre>"},{"location":"system/#prevent-filedir-modification-and-deletion","title":"Prevent file/dir modification and deletion","text":"<ul> <li>View file extended attributes</li> </ul> <pre><code>lsattr &lt;file&gt;\n</code></pre> <ul> <li>Set the immuable flag</li> </ul> <pre><code>chattr +i &lt;file&gt;\n</code></pre>"},{"location":"system/#memory-cpu-and-process-management","title":"Memory, CPU and process management","text":""},{"location":"system/#sort-processes-by-memory-usage","title":"Sort processes by memory usage","text":"<pre><code>ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head\n</code></pre>"},{"location":"system/#sort-processes-by-cpu-usage","title":"Sort processes by cpu usage","text":"<pre><code>ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head\n</code></pre>"},{"location":"system/#sort-processes-by-start-time","title":"Sort processes by start time","text":"<pre><code>ps -ef --sort=start_time\n</code></pre> <ul> <li>Reverse the order</li> </ul> <pre><code>ps -ef --sort=-start_time\n</code></pre>"},{"location":"system/#with-start-time","title":"With start time","text":"<pre><code>ps -eo pid,lstart,cmd\n</code></pre>"},{"location":"system/#ps-using-grep-and-displaying-headers","title":"<code>ps</code> using grep and displaying headers","text":"<pre><code>ps -eo user,pid,ppid,lstart,%mem,%cpu,cmd --sort=start_time | { head -1; grep '\\.py[[:blank:]]'; } | grep -v grep\n</code></pre> <pre><code>ps -eo user,pid,ppid,lstart,%mem,%cpu,cmd --sort=start_time | sed -n '1p; /[.]py[[:blank:]]/p'\n</code></pre> <pre><code>ps -eo user,pid,ppid,lstart,%mem,%cpu,cmd --sort=start_time | awk 'NR == 1 || /[.]py[[:blank:]]/'\n</code></pre>"},{"location":"system/#list-file-descriptors","title":"List file descriptors","text":"<pre><code>lsof -a -p &lt;PID&gt;\n</code></pre>"},{"location":"system/#list-processes-based-on-namepattern","title":"List processes based on name/pattern","text":"<pre><code>pgrep -fa '&lt;pattern&gt;'\n# example\npgrep -fa 'rsync'\n</code></pre>"},{"location":"system/#kill-processes-based-on-namepattern","title":"Kill processes based on name/pattern","text":"<pre><code>pkill -f '&lt;pattern&gt;'\n</code></pre>"},{"location":"system/#show-cpu-details","title":"Show CPU details","text":"<pre><code>lscpu\n</code></pre> <p><code>top</code> then, press <code>1</code> to display usage per CPU.</p> <pre><code>top\n</code></pre>"},{"location":"system/#display-a-tree-of-processes","title":"Display a tree of processes","text":"<pre><code>pstree -laps &lt;pid&gt;\n</code></pre>"},{"location":"system/#keep-processes-running-after-exiting-the-shell","title":"Keep processes running after exiting the shell","text":"<pre><code>nohup &lt;command&gt; &amp;\n</code></pre> <ul> <li>Redirect to a file and to standard error and output</li> </ul> <pre><code>nohup &lt;command&gt; &gt; output.log 2&gt;&amp;1 &amp;\n</code></pre> <ul> <li>Different files for standard output and error</li> </ul> <pre><code>nohup &lt;command&gt; 1&gt; output.log 2&gt; error.log &amp;\n</code></pre>"},{"location":"system/#clear-cachebuffer","title":"Clear cache/buffer","text":"<pre><code>sysctl vm.drop_caches=3\n</code></pre> <p>or</p> <pre><code>sync; echo 3 &gt; /proc/sys/vm/drop_caches\n</code></pre>"},{"location":"system/#clear-swap","title":"Clear swap","text":"<pre><code>swapoff -a\nswapon -a\n</code></pre>"},{"location":"system/#disks","title":"Disks","text":"<p>Input/Output(I/O) performance</p> <pre><code>dnf install sysstat\n</code></pre> <pre><code>iostat -d\n</code></pre> <pre><code>iostat -d /dev/sda\n</code></pre> <pre><code>iostat -p /dev/sda1\n</code></pre>"},{"location":"system/#dns-queries","title":"DNS queries","text":"<pre><code>dig +noall +answer +multiline &lt;fqdn&gt;\n</code></pre>"},{"location":"system/#managing-users","title":"Managing Users","text":"<p>Add user</p> <pre><code>useradd -d &lt;home_dir&gt; -s &lt;shell&gt; &lt;username&gt; -G &lt;group1&gt; &lt;group2&gt;\n</code></pre> <p>Change password</p> <pre><code>passwd &lt;username&gt;\n</code></pre>"},{"location":"system/#ssh","title":"SSH","text":""},{"location":"system/#generate-ssh-key-pair","title":"Generate SSH key pair","text":"<pre><code>ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -C \"&lt;email or comment&gt;\"\n</code></pre> <pre><code>ssh-keygen -t rsa -b 4096 -C \"&lt;email or comment&gt;\"\n</code></pre>"},{"location":"system/#start-ssh-agent-in-the-background","title":"Start ssh-agent in the background","text":"<pre><code>eval \"$(ssh-agent -s)\"\n</code></pre>"},{"location":"system/#add-the-ssh-key-to-the-ssh-agent","title":"Add the SSH key to the ssh-agent","text":"<pre><code>ssh-add ~/.ssh/id_ed25519\n</code></pre>"},{"location":"system/#disable-strict-host-key-checking","title":"Disable Strict Host Key Checking","text":"<pre><code>ssh -o StrictHostKeyChecking=no username@remotehost\n</code></pre>"},{"location":"system/#get-ssh-version","title":"Get SSH version","text":"<pre><code>echo ~ | nc localhost 22\n</code></pre>"},{"location":"system/#logs","title":"Logs","text":"<pre><code>tail -f -n 100 /var/log/secure | grep sshd\n</code></pre> <pre><code>grep sshd /var/log/secure\n</code></pre>"},{"location":"system/#ssl","title":"SSL","text":""},{"location":"system/#check-a-certificate","title":"Check a certificate","text":"<pre><code>openssl x509 -in &lt;srv.crt&gt; -text -noout\n</code></pre>"},{"location":"system/#extract-the-private-key-from-the-pfx-file","title":"Extract the private key from the PFX file","text":"<pre><code>openssl pkcs12 -in &lt;file&gt;.pfx -nocerts -out &lt;private&gt;.key\n</code></pre>"},{"location":"system/#extract-the-certificate-from-the-pfx-file","title":"Extract the certificate from the PFX file","text":"<pre><code>openssl pkcs12 -in &lt;file&gt;.pfx -clcerts -nokeys -out &lt;certificate&gt;.crt\n</code></pre>"},{"location":"system/#extract-the-decrypted-private-key","title":"Extract the decrypted private key","text":"<pre><code>openssl rsa -in &lt;private&gt;.key -out &lt;decrypted&gt;.key\n</code></pre>"},{"location":"system/#extract-the-ca-chain-from-the-pfx-file","title":"Extract the CA chain from the PFX file","text":"<pre><code> openssl pkcs12 -in &lt;file&gt;.pfx -cacerts -nokeys -chain -out &lt;ca&gt;.pem\n</code></pre>"},{"location":"system/#get-a-website-certificate","title":"Get a website certificate","text":"<pre><code>echo | openssl s_client -showcerts -servername &lt;example.com&gt; -connect &lt;example.com&gt;:443 2&gt;/dev/null | openssl x509 -inform pem -noout -text\n</code></pre>"},{"location":"system/#git","title":"Git","text":""},{"location":"system/#setup-git-configuration","title":"Setup git configuration","text":"<pre><code>git config --global user.name \"&lt;name&gt;\"\n</code></pre> <pre><code>git config --global user.email \"&lt;email&gt;\"\n</code></pre> <pre><code>git config --global http.proxy http://&lt;ip_or_fqdn&gt;:&lt;port&gt;\n</code></pre>"},{"location":"system/#work-with-git","title":"Work with Git","text":""},{"location":"system/#stage-all-changes","title":"Stage all changes","text":"<pre><code>git add -A\n</code></pre>"},{"location":"system/#commit-staged-changes","title":"Commit staged changes","text":"<pre><code>git commit -m &lt;commit_message&gt;\n</code></pre> <ul> <li>Edit previous commit message</li> </ul> <pre><code>git commit --amend\n</code></pre>"},{"location":"system/#revert-to-a-previous-commit","title":"Revert to a previous commit","text":"<pre><code>git reset &lt;commit_id&gt; --hard\n</code></pre>"},{"location":"system/#discard-local-changes","title":"Discard local changes","text":"<pre><code>git fetch origin\n</code></pre> <pre><code>git reset --hard origin/&lt;branch_name&gt;\n</code></pre>"},{"location":"system/#vim","title":"Vim","text":""},{"location":"system/#find-and-replace","title":"Find and replace","text":"<pre><code># Syntax\n:[range]s/{pattern}/{string}/[flags]\n# Replace in all lines\n:%s/hello/hi/g\n# Confirm before replacing\n:%s/hello/hi/gc\n# Case-insensitive search\n:%s/hello/hi/gi\n# Replace between lines 1 to 5\n:1,5s/hello/hi/g\n</code></pre>"},{"location":"system/#comment","title":"Comment","text":"<pre><code># Syntax\n:[start line],[end line]s/^/#\n# Comment line 1 to 5\n:1,5s/^/#\n</code></pre>"},{"location":"system/#uncomment","title":"Uncomment","text":"<pre><code># Uncomment line 1 to 5\n:1,5s/^#//\n</code></pre>"},{"location":"system/#set-number","title":"Set number","text":"<pre><code>:set number\n</code></pre>"},{"location":"system/#unset-number","title":"Unset number","text":"<pre><code>:set number!\n</code></pre>"},{"location":"system/#undo-and-redo","title":"Undo and redo","text":"<p>Undo = Press <code>u</code> Redo = Press <code>CTRL+R</code></p>"},{"location":"system/#list-the-available-undo-options","title":"List the available undo options","text":"<pre><code>:undolist\n</code></pre>"},{"location":"system/#delete-blank-lines","title":"Delete blank lines","text":"<pre><code>:g/^$/d\n</code></pre>"},{"location":"system/#systemd","title":"systemd","text":"<p>List all running systemd services</p> <pre><code>systemctl list-units --type=service --state=running\n</code></pre> <p>List all enabled systemd services</p> <pre><code>systemctl list-unit-files --type=service --state=enabled\n</code></pre> <p>List all active sockets</p> <pre><code>systemctl list-sockets\n</code></pre> <p>Show the most recent system errors</p> <pre><code>journalctl -xe\n</code></pre> <p>Monitor logs in real-time</p> <pre><code>journalctl -f\n</code></pre> <p>Monitor logs in real-time for a specific service</p> <pre><code>journalctl -u &lt;unit&gt; -f\n</code></pre> <p>Show log entries since a specific date and time.</p> <pre><code>journalctl --since \"YYYY-MM-DD HH:MM:SS\"\n</code></pre> <p>Display the paths and directories used by the systemd system</p> <pre><code>systemd-path\n</code></pre> <p>Show the current locale and keyboard settings</p> <pre><code>localectl\n</code></pre>"},{"location":"system/#grub","title":"Grub","text":"<p>Modify <code>/etc/default/grub</code></p> <pre><code>vim /etc/default/grub\n</code></pre> <p>Update <code>grub.cfg</code> file</p> <pre><code>grub2-mkconfig -o /boot/grub2/grub.cfg\n</code></pre>"},{"location":"system/#virtualbox","title":"VirtualBox","text":"<p>Error: Please disable the KVM kernel extension, recompile your kernel and reboot (VERR_SVM_IN_USE).</p> <p>Fix for VirtualBox <code>7.1.4</code> and Kernel <code>6.12</code></p> <p>Update <code>/etc/default/grub</code> file: Add <code>kvm.enable_virt_at_load=0</code> parameter to <code>GRUB_CMDLINE_LINUX_DEFAULT</code></p>"},{"location":"system/#networking","title":"Networking","text":""},{"location":"system/#networkmanager","title":"NetworkManager","text":"<p>Check if NetworkManager is running</p> <pre><code>nmcli general\n</code></pre> <p>List all connection profiles</p> <pre><code>nmcli con show \n</code></pre> <p>Check device status</p> <pre><code>nmcli device status\n</code></pre> <p>Get details about connection</p> <pre><code>nmcli con show &lt;con_name&gt;\n</code></pre> <p>Configure network</p> <pre><code>nmcli con mod &lt;con_name&gt; connection.autoconnect yes\n</code></pre> <pre><code>nmcli con mod &lt;con_name&gt; ipv4.addresses &lt;ip_addr/mask&gt; ipv4.method manual ipv4.gateway &lt;gw&gt; ipv4.dns \"&lt;dns1&gt; &lt;dns2&gt;\" ipv4.dns-search &lt;domain&gt;\n</code></pre> <pre><code>nmcli con up &lt;con_name&gt;\n</code></pre> <p>Restart NetworkManager</p> <pre><code>systemctl restart NetworkManager\n</code></pre>"},{"location":"system/#network-configuration-with-network-scriptsdoc","title":"Network configuration with network scripts(doc)","text":"<pre><code>vim /etc/sysconfig/network-scripts/ifcfg-&lt;if_name&gt;\n</code></pre> <p>Example</p> <pre><code>vim /etc/sysconfig/network-scripts/ifcfg-eth0\n</code></pre> <p>Routing and host information for all network interface: <code>/etc/sysconfig/network</code></p> <pre><code>vim /etc/sysconfig/network\n</code></pre>"},{"location":"system/#network-connections-and-statistics","title":"Network connections and statistics","text":"<p>Monitoring all listening TCP connections</p> <pre><code>ss -ltnp\n</code></pre> <p>Monitoring all listening UDP connections</p> <pre><code>ss -lunp\n</code></pre> <p>Monitoring all listening port(tcp/udp) and established connections</p> <pre><code>ss -plantus\n</code></pre>"},{"location":"system/#display-close-wait-socket-connections","title":"Display CLOSE-WAIT socket connections","text":"<pre><code>ss --tcp state CLOSE-WAIT\n</code></pre>"},{"location":"system/#kill-close-wait-socket-connections","title":"Kill CLOSE-WAIT socket connections","text":"<pre><code>ss --tcp state CLOSE-WAIT --kill\n</code></pre>"},{"location":"system/#test-tcp-connections","title":"Test TCP connections","text":"<pre><code>nc -zv &lt;ip_dst&gt; &lt;port&gt;\n</code></pre> <pre><code>nc -zv -s &lt;ip_src&gt; &lt;ip_dst&gt; &lt;port&gt;\n</code></pre>"},{"location":"system/#test-udp-connections","title":"Test UDP connections","text":"<pre><code>nc -zv -u &lt;ip_dst&gt; &lt;port&gt;\n</code></pre>"},{"location":"system/#debug","title":"Debug","text":""},{"location":"system/#tcpdump-with-root","title":"tcpdump (with root)","text":"<pre><code>tcpdump -i &lt;interface name&gt; -w &lt;filename&gt;.pcap\n</code></pre> <pre><code>tcpdump -i &lt;interface name&gt; dst &lt;ip addr or fqdn&gt; -w &lt;filename&gt;.pcap\n</code></pre> <pre><code>tcpdump -i &lt;interface name&gt; port &lt;port&gt; -w &lt;filename&gt;.pcap\n</code></pre>"},{"location":"system/#md5sum-or-sha256sum","title":"md5sum or sha256sum","text":"<pre><code>find -type f -exec md5sum '{}' \\;\n</code></pre> <pre><code>find -type f -exec sha256sum '{}' \\; &gt; hashes.txt\nsha256sum --check hashes.txt\n</code></pre> <pre><code>md5sum --check hashes.txt\n</code></pre> <pre><code>sha256sum --check hashes.txt\n</code></pre> <pre><code>echo \"&lt;hash&gt;  &lt;filename&gt;\" | sha256sum --check\n</code></pre> <pre><code>echo -n 'hi' | sha256sum\n</code></pre> <pre><code>sha256sum &lt;filename&gt;\n</code></pre>"},{"location":"system/#hardware","title":"Hardware","text":"<pre><code># Show USB ports details\nlsusb\n</code></pre>"},{"location":"system/#trace-system-calls-and-signals","title":"Trace system calls and signals","text":"<p>Basic usage</p> <pre><code>strace &lt;command&gt;\n</code></pre> <p>Attach to an running process</p> <pre><code>strace -p &lt;pid&gt;\n</code></pre>"},{"location":"system/#auditd","title":"Auditd","text":""},{"location":"system/#failed-login-attempts","title":"Failed login attempts","text":"<pre><code>ausearch --message USER_LOGIN --success no --interpret\n</code></pre>"},{"location":"system/#failed-system-call","title":"Failed system call","text":"<pre><code>ausearch --start yesterday --end now -m SYSCALL -sv no -i\n</code></pre>"},{"location":"system/#auid-system-call","title":"AUID system call","text":"<pre><code>ausearch --start yesterday --end now -ua &lt;auid&gt; -i\n</code></pre>"},{"location":"system/#list-of-login-events","title":"List of login events","text":"<pre><code>aureport --login -i\n</code></pre>"},{"location":"system/#home","title":"$HOME","text":""},{"location":"system/#bashrc","title":"<code>~/.bashrc</code>","text":"<pre><code>shopt -s histappend\nPROMPT_COMMAND=\"history -a;$PROMPT_COMMAND\"\nHISTCONTROL=ignoreboth\nHISTFILESIZE=50000\nHISTSIZE=${HISTFILESIZE}\nHISTTIMEFORMAT=\"$(date +\"%Y-%m-%dT%H:%M:%S%z\") \"\n\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# Setup the ssh-agent\nif [ ! -S ~/.ssh/ssh_auth_sock ]; then\n  eval `ssh-agent`\n  ln -sf \"$SSH_AUTH_SOCK\" ~/.ssh/ssh_auth_sock\nfi\nexport SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock\nssh-add -l &gt; /dev/null || ssh-add\n\nGPG_TTY=$(tty)\nexport GPG_TTY\n\nexport DATE_ISO8601=$(date +\"%Y-%m-%dT%H-%M-%S%z\")\n\n[ -f ~/.fzf.bash ] &amp;&amp; source ~/.fzf.bash\n\nsource &lt;(kubectl completion bash)\n\n# Custom Prompt\n# Display exit code if not equal 0\n__sh_exitcode() { ret=$?; if [[ $ret != 0 ]]; then echo \"$ret \"; fi }\n\nif [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then\n        PS1='\\[\\033[1;31m\\]$(__sh_exitcode)\\[\\033[1;32m\\](label) \\[\\033[1;37m\\]\\u\\[\\033[0;39m\\]@\\[\\033[1;37m\\]\\h\\[\\033[0;39m\\]:\\[\\033[1;34m\\]\\w\\[\\033[0;39m\\]\\$\\[\\033[0;39m\\] '\nelse\n    PS1='$(__sh_exitcode)\\u@\\h:\\w\\$ '\nfi\n</code></pre>"},{"location":"system/#inputrc","title":"<code>~/.inputrc</code>","text":"<pre><code>set show-all-if-ambiguous off\nset colored-completion-prefix on\nset colored-stats on\n\n\"\\e[A\": history-search-backward\n\"\\e[B\": history-search-forward\n\"\\e[C\": forward-char\n\"\\e[D\": backward-char\n# pgup\n\"\\e[6~\": menu-complete-backward\n# pgdn\n\"\\e[5~\": menu-complete\n</code></pre>"},{"location":"system/#gitconfig","title":"<code>~/.gitconfig</code>","text":"<pre><code>[credential]\n  helper = store --file /path/to/.gitcred\n[user]\n  name = &lt;name&gt;\n  email = &lt;email&gt;\n    # GPG config\n  signingkey = &lt;signingkey&gt;\n[http]\n[http \"https://gitlab.example.com\"]\n  proxy = http://&lt;ip or fqdn&gt;:&lt;port&gt;\n[core]\n    # vscode as a default editor\n  editor = code --wait\n[commit]\n    # GPG config\n  gpgsign = true\n[alias]\n  graph = log --oneline --graph --decorate\n  llog = log --graph --name-status --pretty=format:\\\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\\\" --date=relative\n  acp = \"!f() { git add -A &amp;&amp; git commit -m \\\"$@\\\" &amp;&amp; git push; }; f\"\n</code></pre> <p>Multiple configs</p> <pre><code>[includeIf \"gitdir:~/personal/\"]\n  path = ~/.gitconfig-personal\n[includeIf \"gitdir:~/work/\"]\n  path = ~/.gitconfig-work\n</code></pre>"},{"location":"system/#tmuxconf","title":"<code>~/.tmux.conf</code>","text":"<pre><code>#unbind C-b\n#set -g prefix C-a\n#bind -n C-a send-prefix\n\nunbind C-c\nbind -n C-k killp\nbind -n C-Left split-window -h\nbind -n C-Right split-window -h\nbind -n C-Down split-window -v\nbind -n C-Up split-window -v\n\nbind -n M-Left select-pane -L\nbind -n M-Right select-pane -R\nbind -n M-Up select-pane -U\nbind -n M-Down select-pane -D\n\nbind -n C-x setw synchronize-panes\n\nset -g visual-activity off\nset -g visual-bell off\nset -g visual-silence off\nset -g monitor-activity off\nset -g bell-action none\nset -g mouse on\n\nbind z source-file ~/.tmux.conf\n</code></pre>"},{"location":"system/#date-and-time","title":"Date and time","text":""},{"location":"system/#show-current-time-settings","title":"Show current time settings","text":"<pre><code>timedatectl status\n</code></pre>"},{"location":"system/#set-timezone","title":"Set timezone","text":"<pre><code>timedatectl set-timezone UTC\n</code></pre>"},{"location":"system/#rabbitmq","title":"RabbitMQ","text":"<ul> <li>List queues</li> </ul> <pre><code>rabbitmqctl list_queues\n</code></pre> <ul> <li>List consumers</li> </ul> <pre><code>rabbitmqctl list_consumers\n</code></pre>"},{"location":"system/#tools","title":"Tools","text":"<ul> <li>Extract full paths of json keys</li> </ul> <pre><code>jq -r '[paths | join(\".\")]'  &lt;json_file&gt;\n</code></pre> <p>Example</p> <pre><code>k get deploy &lt;deployment_name&gt; -o json | jq -r '[paths | join(\".\")]'\n</code></pre> <ul> <li>Base64 Encoding/Decoding</li> </ul> <p>Encoding</p> <pre><code>echo -n 'string' | base64\n</code></pre> <pre><code>base64 &lt;/path/to/file&gt;\n</code></pre> <p>Decoding</p> <pre><code>echo -n 'string' | base64 --decode\n</code></pre> <pre><code>base64 --decode &lt;/path/to/file&gt;\n</code></pre>"},{"location":"system/#redhat-based-linux","title":"RedHat-based Linux","text":""},{"location":"system/#admin","title":"Admin","text":""},{"location":"system/#list-installed-packages","title":"List installed packages","text":"<pre><code>dnf list installed\ndnf list installed | grep &lt;package_name&gt;\n</code></pre>"},{"location":"system/#list-all-available-versions-of-a-package","title":"List all available versions of a package","text":"<pre><code>dnf list &lt;package_name&gt; --showduplicates\n</code></pre>"},{"location":"system/#update-a-package","title":"Update a package","text":"<pre><code>dnf update &lt;package_name&gt;\n</code></pre>"},{"location":"system/#download-rpm-package-file","title":"Download RPM package file","text":"<pre><code>dnf download &lt;package_name&gt;\n</code></pre> <ul> <li>Resolve and download needed dependencies</li> </ul> <pre><code>dnf download --resolve &lt;package_name&gt;\n</code></pre>"},{"location":"system/#downgrade-a-package","title":"Downgrade a package","text":"<pre><code>dnf downgrade &lt;package_name&gt;-&lt;version&gt;\n</code></pre>"},{"location":"system/#versionlock-protect-packages-from-being-updated","title":"<code>versionlock</code>: Protect packages from being updated","text":"<pre><code>dnf install python3-dnf-plugin-versionlock -y\n</code></pre> <pre><code>dnf versionlock &lt;package_name&gt;-&lt;version&gt;\n</code></pre> <pre><code>dnf versionlock list\n</code></pre>"},{"location":"system/#finds-the-packages-providing-the-given-file","title":"Finds the packages providing the given file","text":"<pre><code>dnf provides &lt;filename&gt;\n</code></pre>"},{"location":"system/#exclude-package-from-getting-updated","title":"Exclude package from getting updated","text":"<pre><code>dnf update --exclude=PACKAGENAME \n</code></pre> <p>Example</p> <pre><code>dnf update --exclude=kernel*\n</code></pre>"},{"location":"system/#clean-all-cached-filespackages-included","title":"Clean all cached files(packages included)","text":"<pre><code>rm -rf /var/cache/yum/*\n</code></pre> <p>or</p> <pre><code>rm -rf /var/cache/dnf/*\n</code></pre> <p>then</p> <pre><code>dnf clean all\n</code></pre>"},{"location":"system/#remove-old-kernels","title":"Remove old kernels","text":"<pre><code>dnf remove --oldinstallonly --setopt installonly_limit=2 kernel\n</code></pre>"},{"location":"system/#disableenable-repo","title":"Disable/Enable Repo","text":"<p>Show all repos</p> <pre><code>dnf repolist --all\n</code></pre> <p>Disable a repo</p> <pre><code>dnf config-manager --disable &lt;repo_name&gt;\n</code></pre> <p>Show disabled repos</p> <pre><code>dnf repolist --disabled\n</code></pre> <p>Enable a repo</p> <pre><code>dnf config-manager --enable &lt;repo_name&gt;\n</code></pre> <p>Show enabled repos</p> <pre><code>dnf repolist --enabled\n</code></pre> <p>or</p> <pre><code>dnf repolist\n</code></pre>"},{"location":"system/#view-transaction-history","title":"View transaction history","text":"<pre><code>dnf history\n</code></pre>"},{"location":"system/#security-and-bugfixes-updates","title":"Security and bugfixes updates","text":""},{"location":"system/#check-security-andor-bugfixes-updates","title":"Check security and/or bugfixes updates","text":"<pre><code>dnf check-update --security\n</code></pre> <pre><code>dnf check-update --bugfix\n</code></pre> <pre><code>dnf check-update --security --bugfix\n</code></pre> <p>check-update command doc</p>"},{"location":"system/#display-information-about-update-advisories","title":"Display information about update advisories","text":"<pre><code>dnf updateinfo list --security\n</code></pre> <pre><code>dnf updateinfo list --bugfix\n</code></pre> <pre><code>dnf updateinfo list --security --bugfix\n</code></pre> <p>updateinfo command doc</p>"},{"location":"system/#install-security-andor-bugfixes-updates","title":"Install security and/or bugfixes updates","text":"<pre><code>dnf update --security\n</code></pre> <pre><code>dnf update --bugfix\n</code></pre> <pre><code>dnf update --security --bugfix\n</code></pre> <p>upgrade command info</p>"},{"location":"system/#display-information-about-cve","title":"Display information about CVE","text":"<pre><code>dnf updateinfo list --cve=&lt;cve_id&gt;\n</code></pre>"},{"location":"system/#display-information-about-rhsa-id","title":"Display information about RHSA ID","text":"<pre><code>dnf updateinfo info &lt;advisory_id&gt;\n</code></pre>"},{"location":"system/#install-specific-update","title":"Install specific update","text":"<pre><code>dnf update --advisory=&lt;advisory_id&gt;\n</code></pre> <p>Example</p> <pre><code>dnf update --advisory=RHSA-2023:4102\n</code></pre>"},{"location":"system/#shortcuts","title":"Shortcuts","text":"<code>ctrl + alt + F2</code> Get a virtual terminal <code>ctrl + alt + F9</code> Back to X"}]}